@page "/category/edit/{id:int}"
@using GridTest.Repository.IRepository
@using global::Models
@attribute [Authorize]

@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <legend>@Title Category</legend>

    <div class="col-8">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                @*            <ValidationSummary />*@
                <div class="form-group">
                    <label>Name</label>
                    <TelerikTextBox @bind-Value="Category.Name" class="form-control"></TelerikTextBox>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-3">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="grid" class="btn btn-secondary">Back to Grid</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            if (Id == 0)
            {
                IsLoading = false;
            }
            else
            {
                Title = "Update";
                await LoadCategory();
            }           
        }
    }

    private async Task LoadCategory()
    {
        IsLoading=true;
        StateHasChanged();
        Category = await _categoryRepository.GetById(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCategory()
    {
        if (Category.Id == 0)
        {
            await _categoryRepository.Create(Category);
        }
        else
        {
            await _categoryRepository.Update(Category);
        }
       _navigationManager.NavigateTo("grid");
    }
}
